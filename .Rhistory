devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(SignacSlim)
BiocCheck::BiocCheck("../SignacSlim_0.1.0.tar.gz")
devtools::build_vignettes()
BiocCheck::BiocCheck("../SignacSlim_0.1.0.tar.gz")
devtools::document()
BiocCheck::BiocCheck("../SignacSlim_0.1.0.tar.gz")
devtools::document()
devtools::document()
BiocCheck::BiocCheck("../SignacSlim_0.1.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_1.0.0.tar.gz")
1:5
seq_len(5)
?seq_len
seq(from = 1, to = 10)
seq(from = 11, to = 13)
seq(from = 1902, to = 2001)
1902:2001
?sapply
BiocCheck::BiocCheck("../SignacSlim_1.0.0.tar.gz")
q()
BiocCheck::BiocCheck("../SignacSlim_1.0.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
sapply
?sapply
x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))
x
sapply(x, quantile)
vapply(x, quantile, FUN.VALUE, ..., USE.NAMES = TRUE)
vapply(x, quantile, FUN.VALUE, USE.NAMES = TRUE)
vapply(x, quantile, USE.NAMES = TRUE)
seq(10)
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
library(Signac)
devtools::document()
devtools::document()
library(GenomeInfoDbData)
library(GenomeInfoDb)
library(GenomicFeatures)
devtools::document()
library(SignacSlim)
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
fpath
fragments <- CreateFragmentObject(fpath)
atac_small <- readRDS(system.file("extdata", "atac_small.rda", package="SignacSlim"))
system.file("extdata", "atac_small.rda", package="SignacSlim")
load(system.file("extdata", "atac_small.rda", package="SignacSlim"))
atac_small
atac_small@meta.data
granges(atac_small)
a <- granges(atac_small)
saveRDS(object = a, file = "peaks.rds")
library(SignacSlim)
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
peaks <- rtracklayer::import(ppath)
ppath <- system.file("extdata", "peaks.rds", package="SignacSlim")
peaks <- rtracklayer::import(ppath)
peaks <- readRDS(ppath)
peaks
fragments <- CreateFragmentObject(fpath)
FeatureMatrix(fragments = fragments, features = peaks)
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
counts <- CountFragments(fragments = fpath)
counts
library(Signac)
head(colnames(atac_small))
system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
tmpf <- tempfile(fileext = ".gz")
tmpf
?gzfile
?readLines
readLines("./inst/extdata/cell_name.txt.gz")
readLines("./inst/extdata/cell_name.txt")
readLines("./inst/extdata/cell_name.txt")
devtools::document()
mode(pbmc)
library(Signac)
mode(pbmc)
pbmc
atac_small
mode(atac_small)
library(SignacSlim)
library(SignacSlim)
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
?median
stop
?stop
stop(1, "123")
stop(0, "123")
message("Remote fragment files not supported,
skipping fragment file")
message("Remote fragment files not supported, \n
skipping fragment file")
message(
"Remote fragment files not supported, skipping fragment file"
)
stop(
"None of the cells in the fragment
object are present in the assay"
)
啊《-1
a<-1
a
a <-
a
a
a = [1,2,3;]
a <- matrix(seq(9), nrow = 3)
a
a[3;]
a[3，
a[3,
2]
a[3
,2]
library(SignacSlim)
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
devtools::document()
devtools::document()
devtools::document()
library(SignacSlim)
devtools::document()
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
devtools::document()
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
devtools::use_testthat()
install.packages("testthat")
if(312312)
{}
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
ppath <- system.file("extdata", "peaks.rds", package="SignacSlim")
peaks <- readRDS(ppath)
fragments <- CreateFragmentObject(fpath)
out <- FeatureMatrix(
fragments = fragments,
features = peaks
)
library(SignacSlim)
inherits(df,"data.frame")
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
ppath <- system.file("extdata", "peaks.rds", package="SignacSlim")
peaks <- readRDS(ppath)
fragments <- CreateFragmentObject(fpath)
out <- FeatureMatrix(
fragments = fragments,
features = peaks
)
out
class(out)
inherits(out,"dgCMatrix")
devtools::document()
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
?stopifnot
filtered
filtered <-
1
if (filtered == 1) {
stop("Error: cannot open requested file")
}
stopifnot(filtered != 1)
filtered
filtered == 1
filtered ~= 1
filtered != 1
stopifnot(filtered != 1, "Error: cannot open requested file")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
devtools::document()
q()
devtools::document()
library(SignacSlim)
library(EnsDb.Hsapiens.v86)
counts <- Read10X_h5(filename = "C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\filtered_peak_bc_matrix.h5")
metadata <- read.csv(
file = "C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\singlecell.csv",
header = TRUE,
row.names = 1
)
chrom_assay <- CreateChromatinAssay(
counts = counts,
sep = c(":", "-"),
genome = 'hg38',
fragments = 'C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\fragments.tsv.gz',
min.cells = 10,
min.features = 200
)
pbmc <- CreateSeuratObject(
counts = chrom_assay,
assay = "peaks",
meta.data = metadata
)
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
?seqlevelsStyle
seqlevelsStyle(annotations) <- 'UCSC'
annotations
library(SeqUtils)
library(SeqUtils)
library(EnsDb.Hsapiens.v86)
# extract gene annotations from EnsDb
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
# change to UCSC style since the data was mapped to hg19
seqlevelsStyle(annotations) <- 'UCSC'
seqlevelsStyle(annotations) <- 'UCSC'
library(Signac)
library(EnsDb.Hsapiens.v86)
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
seqlevelsStyle(annotations) <- 'UCSC'
?seqlevelsStyle
seqlevelsStyle(annotations)
BiocManager::install("GenomeInfoDb")
BiocManager::install("GenomeInfoDb", force = TRUE)
library(SignacSlim)
library(EnsDb.Hsapiens.v86)
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
annotations
seqlevelsStyle(annotations) <- "UCSC"
gr <- GRanges(rep(c("chr2", "chr3", "chrM"), 2), IRanges(1:6, 10))
gr
seqlevelsStyle(gr) <- "NCBI"
gr
seqlevelsStyle(gr) <- "UCSC"
gr
library(EnsDb.Hsapiens.v86)
# extract gene annotations from EnsDb
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
# change to UCSC style since the data was mapped to hg19
seqlevelsStyle(annotations) <- 'UCSC'
library(EnsDb.Hsapiens.v86)
# extract gene annotations from EnsDb
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
# change to UCSC style since the data was mapped to hg19
seqlevelsStyle(annotations) <- 'UCSC'
annotations <- Signac::GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
warnings()
annotations
seqlevelsStyle(annotations) <- 'UCSC'
library(EnsDb.Hsapiens.v86)
annotations <- Signac::GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
seqlevelsStyle(annotations) <- 'UCSC'
ip <- as.data.frame(installed.packages())
ip
ip <- subset(ip, !grepl("MRO", ip$LibPath))
ip
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
ip
path.lib <- unique(ip$LibPath)
path.lib
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
q()
library(SignacSlim)
library(EnsDb.Hsapiens.v86)
pbmc <- readRDS("C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\pbmc.rds")
pbmc <- NucleosomeSignal(object = pbmc)
pbmc
View(pbmc)
pbmc@active.ident
pbmc$total
pbmc@assays
pbmc@meta.data
pbmc@active.assay
pbmc@graphs
pbmc@project.name
pbmc@misc
pbmc@commands
pbmc@tools
pbmc@active.assay
library(SignacSlim)
library(EnsDb.Hsapiens.v86)
counts <- Read10X_h5(filename = "C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\filtered_peak_bc_matrix.h5")
metadata <- read.csv(
file = "C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\singlecell.csv",
header = TRUE,
row.names = 1
)
chrom_assay <- CreateChromatinAssay(
counts = counts,
sep = c(":", "-"),
genome = 'hg38',
fragments = 'C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\fragments.tsv.gz',
min.cells = 10,
min.features = 200
)
pbmc <- CreateSeuratObject(
counts = chrom_assay,
assay = "peaks",
meta.data = metadata
)
# extract gene annotations from EnsDb
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
# change to UCSC style since the data was mapped to hg19
seqlevelsStyle(annotations) <- 'UCSC'
q()
library(signac)
BiocManager::install("biozivBase")
install.packages("Signac")
BiocManager::install("biovizBase")
install.packages("hdf5r")
library(SignacSlim)
library(EnsDb.Hsapiens.v86)
counts <- Read10X_h5(filename = "C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\filtered_peak_bc_matrix.h5")
metadata <- read.csv(
file = "C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\singlecell.csv",
header = TRUE,
row.names = 1
)
chrom_assay <- CreateChromatinAssay(
counts = counts,
sep = c(":", "-"),
genome = 'hg38',
fragments = 'C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\fragments.tsv.gz',
min.cells = 10,
min.features = 200
)
pbmc <- CreateSeuratObject(
counts = chrom_assay,
assay = "peaks",
meta.data = metadata
)
annotations <- readRDS("'C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\annotations.rds'")
annotations <- readRDS("C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\annotations.rds")
annotations
Annotation(pbmc) <- annotations
pbmc <- NucleosomeSignal(object = pbmc)
pbmc <- TSSEnrichment(object = pbmc, fast = FALSE)
install.packages("knitr")
install.packages("rmarkdown")
install.packages("prettydoc")
BiocManager::install("BiocCheck")
q()
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
library(RcppEigen)
?RcppEigen.package.skeleton
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
fpath
fpath <- system.file("extdata", "cell_name.txt", package="SignacSlim")
fpath
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
cpath <- system.file("extdata", "cell_name.txt", package="SignacSlim")
cells <- readLines(cpath)
cells
names(x = cells) <- paste0("test_", cells)
cells
frags <- CreateFragmentObject(path = fpath, cells = cells, verbose = FALSE, tolerance = 0.5)
library(rtracklayer)
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
ppath <- system.file("extdata", "peaks.rds", package="SignacSlim")
peaks <- readRDS(ppath)
fragments <- CreateFragmentObject(fpath)
FeatureMatrix(fragments = fragments,features = peaks)
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
cells <- readLines(system.file("extdata", "cell_name.txt", package="SignacSlim"))
cells
tmpf <- tempfile(fileext = ".gz")
FilterCells(fragments = fpath,cells = cells,outfile = tmpf)
file.remove(tmpf)
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
fragments <- CreateFragmentObject(fpath)
FragmentHistogram(object = fragments, region = "chr1-10245-780007")
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
GetCellsInRegion(tabix = fpath, region = "chr1-10245-762629")
devtools::document()
devtools::document()
library(SignacSlim)
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
devtools::document()
library(SignacSlim)
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
seq(10)
1:10
?seq
1902:2001
seq(from = 1902, to = 2001)
5 * (seq(9)) - 1
5 * (seq(3)) - 1
devtools::document()
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
devtools::document()
library(SignacSlim)
library(SignacSlim)
library(EnsDb.Hsapiens.v86)
counts <- Read10X_h5(filename = "C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\filtered_peak_bc_matrix.h5")
metadata <- read.csv(
file = "C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\singlecell.csv",
header = TRUE,
row.names = 1
)
chrom_assay <- CreateChromatinAssay(
counts = counts,
sep = c(":", "-"),
genome = 'hg38',
fragments = 'C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\fragments.tsv.gz',
min.cells = 10,
min.features = 200
)
pbmc <- CreateSeuratObject(
counts = chrom_assay,
assay = "peaks",
meta.data = metadata
)
annotations <- readRDS("C:\\Users\\zhang\\Documents\\R Scripts\\scATACseq_test\\annotations.rds")
Annotation(pbmc) <- annotations
pbmc <- NucleosomeSignal(object = pbmc)
pbmc <- TSSEnrichment(object = pbmc, fast = FALSE)
pbmc$pct_reads_in_peaks <- pbmc$peak_region_fragments / pbmc$passed_filters * 100
pbmc$blacklist_ratio <- pbmc$blacklist_region_fragments / pbmc$peak_region_fragments
pbmc$high.tss <- ifelse(pbmc$TSS.enrichment > 2, 'High', 'Low')
TSSPlot(pbmc, group.by = 'high.tss')
library(SignacSlim)
library(rtracklayer)
peaks <- import("C:\\Users\\zhang\\Documents\\R Scripts\\Others\\peaks.bed")
fragments <- CreateFragmentObject("C:\\Users\\zhang\\Documents\\R Scripts\\Others\\fragments.tsv.gz")
data <- FeatureMatrix(fragments = fragments, features = peaks, process_n = 2000)
data
devtools::document()
library(SignacSlim)
fpath <- system.file("extdata", "fragments.tsv.gz", package="SignacSlim")
ppath <- system.file("extdata", "peaks.rds", package="SignacSlim")
peaks <- readRDS(ppath)
fragments <- CreateFragmentObject(fpath)
Matrix <- FeatureMatrix(
fragments = fragments,
features = peaks
)
Matrix <- FeatureMatrix(
fragments = fragments,
features = peaks
)
print(Matrix[1:10, 1:10])
print(Matrix[1:10, 1:3])
print(Matrix[1:10, 1:4])
devtools::document()
q()
BiocManager::install()
q()
install.packages("hdf5r")
library(SignacSlim)
install.packages("prettydoc")
BiocManager::install("BiocCheck")
q()
devtools::check()
?devtools::check
devtools::check("../SignacSlim_0.99.0.tar.gz")
devtools::check()
devtools::check()
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
BiocCheck::BiocCheck("../SignacSlim_0.99.0.tar.gz")
install.packages("knitr")
install.packages("knitr")
install.packages("testthat")
install.packages("stringi")
install.packages("biovizBase")
install.packages("fastmatch")
q()
library(SignacSlim)
install.packages()
BiocManager::install()
??head
library(utils)
?head
devtools::document()
devtools::document()
devtools::document()
??head
install.packages("renv")
library(SignacSlim)
install.packages("rmarkdown")
library(rmarkdown)
devtools::document()
library(SignacSlim)
q()
devtools::document()
devtools::document()
library(SignacSlim)
devtools::document()
library(rmarkdown)
devtools::check_built()
devtools::as.package(x = ".")
