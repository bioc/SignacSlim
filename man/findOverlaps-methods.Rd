% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iranges-methods.R
\name{findOverlaps-methods}
\alias{findOverlaps-methods}
\alias{findOverlaps}
\alias{findOverlaps,Vector,ChromatinAssay-method}
\alias{findOverlaps,ChromatinAssay,Vector-method}
\alias{findOverlaps,ChromatinAssay,ChromatinAssay-method}
\alias{countOverlaps,Vector,ChromatinAssay-method}
\alias{countOverlaps}
\alias{countOverlaps,ChromatinAssay,Vector-method}
\alias{countOverlaps,ChromatinAssay,ChromatinAssay-method}
\title{Find overlapping ranges for ChromatinAssay objects}
\usage{
\S4method{findOverlaps}{Vector,ChromatinAssay}(
  query,
  subject,
  maxgap = -1L,
  minoverlap = 0L,
  type = c("any", "start", "end", "within", "equal"),
  select = c("all", "first", "last", "arbitrary"),
  ignore.strand = FALSE
)

\S4method{findOverlaps}{ChromatinAssay,Vector}(
  query,
  subject,
  maxgap = -1L,
  minoverlap = 0L,
  type = c("any", "start", "end", "within", "equal"),
  select = c("all", "first", "last", "arbitrary"),
  ignore.strand = FALSE
)

\S4method{findOverlaps}{ChromatinAssay,ChromatinAssay}(
  query,
  subject,
  maxgap = -1L,
  minoverlap = 0L,
  type = c("any", "start", "end", "within", "equal"),
  select = c("all", "first", "last", "arbitrary"),
  ignore.strand = FALSE
)

\S4method{countOverlaps}{Vector,ChromatinAssay}(
  query,
  subject,
  maxgap = -1L,
  minoverlap = 0L,
  type = c("any", "start", "end", "within", "equal"),
  ignore.strand = FALSE
)

\S4method{countOverlaps}{ChromatinAssay,Vector}(
  query,
  subject,
  maxgap = -1L,
  minoverlap = 0L,
  type = c("any", "start", "end", "within", "equal"),
  ignore.strand = FALSE
)

\S4method{countOverlaps}{ChromatinAssay,ChromatinAssay}(
  query,
  subject,
  maxgap = -1L,
  minoverlap = 0L,
  type = c("any", "start", "end", "within", "equal"),
  ignore.strand = FALSE
)
}
\arguments{
\item{query, subject}{A \code{\link{ChromatinAssay}} object}

\item{maxgap, minoverlap, type, select, ignore.strand}{See
\code{?\link[GenomicRanges]{findOverlaps}} in the \pkg{GenomicRanges} and
\pkg{IRanges} packages.}
}
\value{
See \code{\link[GenomicRanges]{findOverlaps}}
}
\description{
The \code{findOverlaps, countOverlaps} methods are available for
\code{\link{ChromatinAssay}} objects. This allows finding overlaps between
genomic ranges and the ranges stored in the ChromatinAssay.
}
\details{
If a ChromatinAssay is set as the default assay in a
\code{\link[SeuratObject]{Seurat}} object, you can also call
\code{findOverlaps}
directly on the Seurat object.
}
\section{Functions}{
\itemize{
\item \code{findOverlaps,ChromatinAssay,Vector-method}: method for ChromatinAssay, Vector

\item \code{findOverlaps,ChromatinAssay,ChromatinAssay-method}: method for ChromatinAssay, ChromatinAssay

\item \code{countOverlaps,Vector,ChromatinAssay-method}: method for Vector, ChromatinAssay

\item \code{countOverlaps,ChromatinAssay,Vector-method}: method for ChromatinAssay, Vector

\item \code{countOverlaps,ChromatinAssay,ChromatinAssay-method}: method for ChromatinAssay, ChromatinAssay
}}

\examples{
if(FLASE){
    print("see https://satijalab.org/signac/reference/chromatinassay-class")
}
}
\seealso{
\itemize{
  \item{\link[IRanges]{findOverlaps-methods} in the \pkg{IRanges} package.}
  \item{\link[GenomicRanges]{findOverlaps-methods} in the \pkg{GenomicRanges}
  package}
  \item{\link{ChromatinAssay-class}}
 }
}
\concept{overlaps}
